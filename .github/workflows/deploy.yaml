name: deploy


on:
  workflow_dispatch:
#on:
#  push:
#    branches: [ "master" ]

jobs:
  build:
    ## checkout후 자바 17 버전으로 설정을 합니다
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      ## gradlew 의 권한을 줍니다.
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      ## gradle build
#      - name: Build with Gradle
#        run: ./gradlew clean build --debug
#      ## 이미지 태그에 시간 설정을 하기위해서 현재 시간을 가져옵니다.
#      - name: Get current time
#        uses: 1466587594/get-current-time@v2
#        id: current-time
#        with:
#          format: YYYY-MM-DDTHH-mm-ss
#          utcOffset: "+09:00"
#      - name: Show Current Time
#        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
      ## AWS에 로그인합니다. aws-region은 서울로 설정(ap-northeast-2)했습니다
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIA3FLD6RRSGNWUQYEG
          aws-secret-access-key: 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
          aws-region: ap-northeast-2
#      ## ECR에 로그인합니다
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#      ## sample라는 ECR 리파지터리에 현재 시간 태그를 생성하고, 푸쉬합니다. xxx부분은 본인의 레파지터리 주소입니다.
#      ## 앞의 스탭에서 ${{steps.current-time.outputs.formattedTime}}로 현재 시간을 가져옵니다.
#      - name: Build, tag, and push image to Amazon ECR
#        run: |
#          docker build -t cicd:latest .
#          docker tag cicd:latest 767398153316.dkr.ecr.ap-northeast-2.amazonaws.com/cicd:latest
#          docker push 767398153316.dkr.ecr.ap-northeast-2.amazonaws.com/cicd:latest
#      - name: update yaml file
#        run: |
#          sed -i s/latest/${GITHUB_REF##*/}/ ./k8s/deployment.yaml
#          cat ./k8s/deployment.yaml
      - name: Setup AWS SAM CLI
        uses: aws-actions/setup-sam@v2
      - name: Update kube config
        run: aws eks update-kubeconfig --name test-eks-clsuter --region ap-northeast-2
      - name: kubectl apply
        uses: steebchen/kubectl@v2.0.0
        with:
          command: apply -f ./k8s/test-deployment.yaml
#      - name: test-service
#        run: kubectl apply -f ./test-service.yaml
#      - name: test-ingress
#        run: kubectl apply -f ./test-ingress.yaml